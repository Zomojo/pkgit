.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
.TH PKGIT-TAG-NEXT "1" "May 2013" "pkgit-tag-next 0.0.0-1" "User Commands"
.SH NAME
pkgit-tag-next \- manual page for pkgit-tag-next 0.0.0-1
.SH SYNOPSIS
.B pkgit-tag-next
[\fI-h|--help\fR] [\fI--debug\fR] [\fI--version\fR] [\fI-v|--verbose\fR] [\fI-p|--pretend\fR] [\fI-m|--message=<meaningful message>\fR] \fI<package_name>\fR
.SH DESCRIPTION
Create an annotated tag in the git repository with the next version by looking at the last tagged version, and adding one to the last dotted element. Obviously only works if version numbers are reasonably standard. If the current head already has a tag for another project, then the new tag will reuse the other projects version number rather than bumping the version number.
.PP
For example, if you are trying to create a tag for pkg\-two and the last git tag was pkg\-one\-2.3.6\-1 and HEAD has moved on from that tag, then the new tag will be pkg\-two\-2.3.7\-1. But, if you are trying to create a tag for pkg\-two and the last git tag was pkg\-one\-2.3.6\-1 which is currently the same as HEAD, then the new tag will be pkg\-two\-2.3.6\-1
.SH OPTIONS
.TP
\fB\-h\fR|\-\-help
Print this message
.TP
\fB\-\-debug\fR
Executes "set \fB\-x\fR" to put the shell into debug mode
.TP
\fB\-\-version\fR
Print the version number and exit
.TP
\fB\-v\fR|\-\-verbose
Print out extra information rather than showing nothing
.TP
\fB\-p\fR|\-\-pretend
Do all the work but don't actually execute the git tag command. Works best in conjunction with \fB\-\-verbose\fR
.TP
\fB\-m\fR|\-\-message
The message to be put into the annotated tag.  Defaults to "Tagging in preparation for packaging"
.TP
\fB\-q\fR|\-\-quiet
Surpress the echo of the tag. That is, just do all the git work and do it quietly.
.SH EXAMPLES
pkgit\-tag\-next \fB\-m\fR "The Heisenbug is gone" my\-package\-name
